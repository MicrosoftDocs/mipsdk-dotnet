<Type Name="IProtectionEngine" FullName="Microsoft.InformationProtection.Protection.IProtectionEngine">
  <TypeSignature Language="C#" Value="public interface IProtectionEngine : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProtectionEngine implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.InformationProtection.Protection.IProtectionEngine" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProtectionEngine&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type IProtectionEngine = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.InformationProtection</AssemblyName>
    <AssemblyVersion>1.6.113.0</AssemblyVersion>
    <AssemblyVersion>1.6.152.0</AssemblyVersion>
    <AssemblyVersion>1.7.133.0</AssemblyVersion>
    <AssemblyVersion>1.7.147.0</AssemblyVersion>
    <AssemblyVersion>1.8.94.0</AssemblyVersion>
    <AssemblyVersion>1.8.102.0</AssemblyVersion>
    <AssemblyVersion>1.9.78.0</AssemblyVersion>
    <AssemblyVersion>1.9.90.0</AssemblyVersion>
    <AssemblyVersion>1.10.93.0</AssemblyVersion>
    <AssemblyVersion>1.10.98.0</AssemblyVersion>
    <AssemblyVersion>1.11.53.0</AssemblyVersion>
    <AssemblyVersion>1.11.96.0</AssemblyVersion>
    <AssemblyVersion>1.12.61.0</AssemblyVersion>
    <AssemblyVersion>1.12.101.0</AssemblyVersion>
    <AssemblyVersion>1.13.161.0</AssemblyVersion>
    <AssemblyVersion>1.14.108.0</AssemblyVersion>
    <AssemblyVersion>1.15.104.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            This class manages protection-related actions related to a specific identity.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateDelegationLicenses">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Microsoft.InformationProtection.Protection.IDelegationLicense&gt; CreateDelegationLicenses (Microsoft.InformationProtection.Protection.DelegationLicenseSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.List`1&lt;class Microsoft.InformationProtection.Protection.IDelegationLicense&gt; CreateDelegationLicenses(class Microsoft.InformationProtection.Protection.DelegationLicenseSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.CreateDelegationLicenses(Microsoft.InformationProtection.Protection.DelegationLicenseSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDelegationLicenses (settings As DelegationLicenseSettings) As List(Of IDelegationLicense)" />
      <MemberSignature Language="F#" Value="abstract member CreateDelegationLicenses : Microsoft.InformationProtection.Protection.DelegationLicenseSettings -&gt; System.Collections.Generic.List&lt;Microsoft.InformationProtection.Protection.IDelegationLicense&gt;" Usage="iProtectionEngine.CreateDelegationLicenses settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.8.102.0</AssemblyVersion>
        <AssemblyVersion>1.9.90.0</AssemblyVersion>
        <AssemblyVersion>1.10.98.0</AssemblyVersion>
        <AssemblyVersion>1.11.96.0</AssemblyVersion>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.InformationProtection.Protection.IDelegationLicense&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.InformationProtection.Protection.DelegationLicenseSettings" Index="0" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.8;mipsdk-dotnet-1.9" />
      </Parameters>
      <Docs>
        <param name="settings">The delegation settings.</param>
        <summary>
            Creates a delegated license.
            </summary>
        <returns>List of <c>IDelegationLicense</c></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDelegationLicensesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.InformationProtection.Protection.IDelegationLicense&gt;&gt; CreateDelegationLicensesAsync (Microsoft.InformationProtection.Protection.DelegationLicenseSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.InformationProtection.Protection.IDelegationLicense&gt;&gt; CreateDelegationLicensesAsync(class Microsoft.InformationProtection.Protection.DelegationLicenseSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.CreateDelegationLicensesAsync(Microsoft.InformationProtection.Protection.DelegationLicenseSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDelegationLicensesAsync (settings As DelegationLicenseSettings) As Task(Of List(Of IDelegationLicense))" />
      <MemberSignature Language="F#" Value="abstract member CreateDelegationLicensesAsync : Microsoft.InformationProtection.Protection.DelegationLicenseSettings -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.InformationProtection.Protection.IDelegationLicense&gt;&gt;" Usage="iProtectionEngine.CreateDelegationLicensesAsync settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.8.102.0</AssemblyVersion>
        <AssemblyVersion>1.9.90.0</AssemblyVersion>
        <AssemblyVersion>1.10.98.0</AssemblyVersion>
        <AssemblyVersion>1.11.96.0</AssemblyVersion>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.InformationProtection.Protection.IDelegationLicense&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.InformationProtection.Protection.DelegationLicenseSettings" Index="0" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.8;mipsdk-dotnet-1.9" />
      </Parameters>
      <Docs>
        <param name="settings">The delegation settings.</param>
        <summary>
            Creates a delegated license.
            </summary>
        <returns>A task that represents the asynchronous create operation. The value of the <c>TResult</c> parameter contains <c>IDelegationLicense</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProtectionHandlerForConsumption">
      <MemberSignature Language="C#" Value="public Microsoft.InformationProtection.Protection.IProtectionHandler CreateProtectionHandlerForConsumption (Microsoft.InformationProtection.Protection.ConsumptionSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.InformationProtection.Protection.IProtectionHandler CreateProtectionHandlerForConsumption(class Microsoft.InformationProtection.Protection.ConsumptionSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.CreateProtectionHandlerForConsumption(Microsoft.InformationProtection.Protection.ConsumptionSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProtectionHandlerForConsumption (settings As ConsumptionSettings) As IProtectionHandler" />
      <MemberSignature Language="F#" Value="abstract member CreateProtectionHandlerForConsumption : Microsoft.InformationProtection.Protection.ConsumptionSettings -&gt; Microsoft.InformationProtection.Protection.IProtectionHandler" Usage="iProtectionEngine.CreateProtectionHandlerForConsumption settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.6.152.0</AssemblyVersion>
        <AssemblyVersion>1.7.147.0</AssemblyVersion>
        <AssemblyVersion>1.8.102.0</AssemblyVersion>
        <AssemblyVersion>1.9.90.0</AssemblyVersion>
        <AssemblyVersion>1.10.98.0</AssemblyVersion>
        <AssemblyVersion>1.11.96.0</AssemblyVersion>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.InformationProtection.Protection.IProtectionHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.InformationProtection.Protection.ConsumptionSettings" />
      </Parameters>
      <Docs>
        <param name="settings">Protection settings.</param>
        <summary>
            Creates a protection handler where rights/roles are assigned to specific users.
            </summary>
        <returns>The <c>IProtectionHandler</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProtectionHandlerForConsumptionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.InformationProtection.Protection.IProtectionHandler&gt; CreateProtectionHandlerForConsumptionAsync (Microsoft.InformationProtection.Protection.ConsumptionSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.InformationProtection.Protection.IProtectionHandler&gt; CreateProtectionHandlerForConsumptionAsync(class Microsoft.InformationProtection.Protection.ConsumptionSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.CreateProtectionHandlerForConsumptionAsync(Microsoft.InformationProtection.Protection.ConsumptionSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProtectionHandlerForConsumptionAsync (settings As ConsumptionSettings) As Task(Of IProtectionHandler)" />
      <MemberSignature Language="F#" Value="abstract member CreateProtectionHandlerForConsumptionAsync : Microsoft.InformationProtection.Protection.ConsumptionSettings -&gt; System.Threading.Tasks.Task&lt;Microsoft.InformationProtection.Protection.IProtectionHandler&gt;" Usage="iProtectionEngine.CreateProtectionHandlerForConsumptionAsync settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.6.152.0</AssemblyVersion>
        <AssemblyVersion>1.7.147.0</AssemblyVersion>
        <AssemblyVersion>1.8.102.0</AssemblyVersion>
        <AssemblyVersion>1.9.90.0</AssemblyVersion>
        <AssemblyVersion>1.10.98.0</AssemblyVersion>
        <AssemblyVersion>1.11.96.0</AssemblyVersion>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.InformationProtection.Protection.IProtectionHandler&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.InformationProtection.Protection.ConsumptionSettings" />
      </Parameters>
      <Docs>
        <param name="settings">Protection settings.</param>
        <summary>
            Starts creating a protection handler where rights/roles are assigned to specific users.
            </summary>
        <returns>A task that represents the asynchronous create operation. The value of the <c>TResult</c> parameter contains <c>IProtectionHandler</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProtectionHandlerForPublishing">
      <MemberSignature Language="C#" Value="public Microsoft.InformationProtection.Protection.IProtectionHandler CreateProtectionHandlerForPublishing (Microsoft.InformationProtection.Protection.PublishingSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.InformationProtection.Protection.IProtectionHandler CreateProtectionHandlerForPublishing(class Microsoft.InformationProtection.Protection.PublishingSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.CreateProtectionHandlerForPublishing(Microsoft.InformationProtection.Protection.PublishingSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProtectionHandlerForPublishing (settings As PublishingSettings) As IProtectionHandler" />
      <MemberSignature Language="F#" Value="abstract member CreateProtectionHandlerForPublishing : Microsoft.InformationProtection.Protection.PublishingSettings -&gt; Microsoft.InformationProtection.Protection.IProtectionHandler" Usage="iProtectionEngine.CreateProtectionHandlerForPublishing settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.6.152.0</AssemblyVersion>
        <AssemblyVersion>1.7.147.0</AssemblyVersion>
        <AssemblyVersion>1.8.102.0</AssemblyVersion>
        <AssemblyVersion>1.9.90.0</AssemblyVersion>
        <AssemblyVersion>1.10.98.0</AssemblyVersion>
        <AssemblyVersion>1.11.96.0</AssemblyVersion>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.InformationProtection.Protection.IProtectionHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.InformationProtection.Protection.PublishingSettings" />
      </Parameters>
      <Docs>
        <param name="settings">Protection settings.</param>
        <summary>
            Creates a protection handler where rights/roles are assigned to specific users.
            </summary>
        <returns>The <c>IProtectionHandler</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProtectionHandlerForPublishingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.InformationProtection.Protection.IProtectionHandler&gt; CreateProtectionHandlerForPublishingAsync (Microsoft.InformationProtection.Protection.PublishingSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.InformationProtection.Protection.IProtectionHandler&gt; CreateProtectionHandlerForPublishingAsync(class Microsoft.InformationProtection.Protection.PublishingSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.CreateProtectionHandlerForPublishingAsync(Microsoft.InformationProtection.Protection.PublishingSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProtectionHandlerForPublishingAsync (settings As PublishingSettings) As Task(Of IProtectionHandler)" />
      <MemberSignature Language="F#" Value="abstract member CreateProtectionHandlerForPublishingAsync : Microsoft.InformationProtection.Protection.PublishingSettings -&gt; System.Threading.Tasks.Task&lt;Microsoft.InformationProtection.Protection.IProtectionHandler&gt;" Usage="iProtectionEngine.CreateProtectionHandlerForPublishingAsync settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.6.152.0</AssemblyVersion>
        <AssemblyVersion>1.7.147.0</AssemblyVersion>
        <AssemblyVersion>1.8.102.0</AssemblyVersion>
        <AssemblyVersion>1.9.90.0</AssemblyVersion>
        <AssemblyVersion>1.10.98.0</AssemblyVersion>
        <AssemblyVersion>1.11.96.0</AssemblyVersion>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.InformationProtection.Protection.IProtectionHandler&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.InformationProtection.Protection.PublishingSettings" />
      </Parameters>
      <Docs>
        <param name="settings">Protection settings.</param>
        <summary>
            Starts creating a protection handler where rights/roles are assigned to specific users.
            </summary>
        <returns>A task that represents the asynchronous create operation. The value of the <c>TResult</c> parameter contains <c>IProtectionHandler</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLicenseRightsData">
      <MemberSignature Language="C#" Value="public Microsoft.InformationProtection.Protection.LicenseRightsData GetLicenseRightsData (Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo, Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.InformationProtection.Protection.LicenseRightsData GetLicenseRightsData(class Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo, class Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.GetLicenseRightsData(Microsoft.InformationProtection.Protection.PublishingLicenseInfo,Microsoft.InformationProtection.Protection.ProtectionCommonSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLicenseRightsData (licenseInfo As PublishingLicenseInfo, Optional settings As ProtectionCommonSettings = Nothing) As LicenseRightsData" />
      <MemberSignature Language="F#" Value="abstract member GetLicenseRightsData : Microsoft.InformationProtection.Protection.PublishingLicenseInfo * Microsoft.InformationProtection.Protection.ProtectionCommonSettings -&gt; Microsoft.InformationProtection.Protection.LicenseRightsData" Usage="iProtectionEngine.GetLicenseRightsData (licenseInfo, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.InformationProtection.Protection.LicenseRightsData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="licenseInfo" Type="Microsoft.InformationProtection.Protection.PublishingLicenseInfo" Index="0" FrameworkAlternate="mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14" />
        <Parameter Name="settings" Type="Microsoft.InformationProtection.Protection.ProtectionCommonSettings" Index="1" FrameworkAlternate="mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14" />
      </Parameters>
      <Docs>
        <param name="licenseInfo">Publishing license from the protected content.</param>
        <param name="settings">Common settings for protection</param>
        <summary>
            Get license rights data from publishing license.
            </summary>
        <returns>
          <c>LicenseRightsData</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLicenseRightsDataAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.InformationProtection.Protection.LicenseRightsData&gt; GetLicenseRightsDataAsync (Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo, Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.InformationProtection.Protection.LicenseRightsData&gt; GetLicenseRightsDataAsync(class Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo, class Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.GetLicenseRightsDataAsync(Microsoft.InformationProtection.Protection.PublishingLicenseInfo,Microsoft.InformationProtection.Protection.ProtectionCommonSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLicenseRightsDataAsync (licenseInfo As PublishingLicenseInfo, Optional settings As ProtectionCommonSettings = Nothing) As Task(Of LicenseRightsData)" />
      <MemberSignature Language="F#" Value="abstract member GetLicenseRightsDataAsync : Microsoft.InformationProtection.Protection.PublishingLicenseInfo * Microsoft.InformationProtection.Protection.ProtectionCommonSettings -&gt; System.Threading.Tasks.Task&lt;Microsoft.InformationProtection.Protection.LicenseRightsData&gt;" Usage="iProtectionEngine.GetLicenseRightsDataAsync (licenseInfo, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.InformationProtection.Protection.LicenseRightsData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="licenseInfo" Type="Microsoft.InformationProtection.Protection.PublishingLicenseInfo" Index="0" FrameworkAlternate="mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14" />
        <Parameter Name="settings" Type="Microsoft.InformationProtection.Protection.ProtectionCommonSettings" Index="1" FrameworkAlternate="mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14" />
      </Parameters>
      <Docs>
        <param name="licenseInfo">Publishing license from the protected content.</param>
        <param name="settings">Common settings for protection</param>
        <summary>
            Get license rights data from publishing license.
            </summary>
        <returns>A task that represents the asynchronous create operation. The value of the <c>TResult</c> parameter contains license rights data.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRightsForLabelId">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; GetRightsForLabelId (string documentId, string labelId, string ownerEmail, string delegatedUserEmail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.List`1&lt;string&gt; GetRightsForLabelId(string documentId, string labelId, string ownerEmail, string delegatedUserEmail) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.GetRightsForLabelId(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRightsForLabelId (documentId As String, labelId As String, ownerEmail As String, delegatedUserEmail As String) As List(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetRightsForLabelId : string * string * string * string -&gt; System.Collections.Generic.List&lt;string&gt;" Usage="iProtectionEngine.GetRightsForLabelId (documentId, labelId, ownerEmail, delegatedUserEmail)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.6.152.0</AssemblyVersion>
        <AssemblyVersion>1.7.147.0</AssemblyVersion>
        <AssemblyVersion>1.8.102.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="System.String" Index="0" FrameworkAlternate="mipsdk-dotnet-1.6;mipsdk-dotnet-1.7;mipsdk-dotnet-1.8" />
        <Parameter Name="labelId" Type="System.String" Index="1" FrameworkAlternate="mipsdk-dotnet-1.6;mipsdk-dotnet-1.7;mipsdk-dotnet-1.8" />
        <Parameter Name="ownerEmail" Type="System.String" Index="2" FrameworkAlternate="mipsdk-dotnet-1.6;mipsdk-dotnet-1.7;mipsdk-dotnet-1.8" />
        <Parameter Name="delegatedUserEmail" Type="System.String" Index="3" FrameworkAlternate="mipsdk-dotnet-1.6;mipsdk-dotnet-1.7;mipsdk-dotnet-1.8" />
      </Parameters>
      <Docs>
        <param name="documentId">Document ID associated with the document metadata.</param>
        <param name="labelId">Label ID associated with the document metadata with which the document created.</param>
        <param name="ownerEmail">Owner of the document.</param>
        <param name="delegatedUserEmail">A delegated user is specified when the authenticating user/application is acting on behalf of another user, empty if none.</param>
        <summary>
            Get collection of rights available to a user for a label ID.
            </summary>
        <returns>List of rights.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRightsForLabelId">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; GetRightsForLabelId (string documentId, string labelId, string ownerEmail, string delegatedUserEmail, Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.List`1&lt;string&gt; GetRightsForLabelId(string documentId, string labelId, string ownerEmail, string delegatedUserEmail, class Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.GetRightsForLabelId(System.String,System.String,System.String,System.String,Microsoft.InformationProtection.Protection.ProtectionCommonSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRightsForLabelId (documentId As String, labelId As String, ownerEmail As String, delegatedUserEmail As String, Optional settings As ProtectionCommonSettings = Nothing) As List(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetRightsForLabelId : string * string * string * string * Microsoft.InformationProtection.Protection.ProtectionCommonSettings -&gt; System.Collections.Generic.List&lt;string&gt;" Usage="iProtectionEngine.GetRightsForLabelId (documentId, labelId, ownerEmail, delegatedUserEmail, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.9.90.0</AssemblyVersion>
        <AssemblyVersion>1.10.98.0</AssemblyVersion>
        <AssemblyVersion>1.11.96.0</AssemblyVersion>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="System.String" Index="0" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
        <Parameter Name="labelId" Type="System.String" Index="1" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
        <Parameter Name="ownerEmail" Type="System.String" Index="2" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
        <Parameter Name="delegatedUserEmail" Type="System.String" Index="3" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
        <Parameter Name="settings" Type="Microsoft.InformationProtection.Protection.ProtectionCommonSettings" Index="4" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
      </Parameters>
      <Docs>
        <param name="documentId">Document ID associated with the document metadata.</param>
        <param name="labelId">Label ID associated with the document metadata with which the document created.</param>
        <param name="ownerEmail">Owner of the document.</param>
        <param name="delegatedUserEmail">A delegated user is specified when the authenticating user/application is acting on behalf of another user, empty if none.</param>
        <param name="settings">Common settings for protection</param>
        <summary>
            Get collection of rights available to a user for a label ID.
            </summary>
        <returns>List of rights.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRightsForLabelIdAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; GetRightsForLabelIdAsync (string documentId, string labelId, string ownerEmail, string delegatedUserEmail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; GetRightsForLabelIdAsync(string documentId, string labelId, string ownerEmail, string delegatedUserEmail) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.GetRightsForLabelIdAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRightsForLabelIdAsync (documentId As String, labelId As String, ownerEmail As String, delegatedUserEmail As String) As Task(Of List(Of String))" />
      <MemberSignature Language="F#" Value="abstract member GetRightsForLabelIdAsync : string * string * string * string -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="iProtectionEngine.GetRightsForLabelIdAsync (documentId, labelId, ownerEmail, delegatedUserEmail)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.6.152.0</AssemblyVersion>
        <AssemblyVersion>1.7.147.0</AssemblyVersion>
        <AssemblyVersion>1.8.102.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="System.String" Index="0" FrameworkAlternate="mipsdk-dotnet-1.6;mipsdk-dotnet-1.7;mipsdk-dotnet-1.8" />
        <Parameter Name="labelId" Type="System.String" Index="1" FrameworkAlternate="mipsdk-dotnet-1.6;mipsdk-dotnet-1.7;mipsdk-dotnet-1.8" />
        <Parameter Name="ownerEmail" Type="System.String" Index="2" FrameworkAlternate="mipsdk-dotnet-1.6;mipsdk-dotnet-1.7;mipsdk-dotnet-1.8" />
        <Parameter Name="delegatedUserEmail" Type="System.String" Index="3" FrameworkAlternate="mipsdk-dotnet-1.6;mipsdk-dotnet-1.7;mipsdk-dotnet-1.8" />
      </Parameters>
      <Docs>
        <param name="documentId">Document ID associated with the document metadata.</param>
        <param name="labelId">Label ID associated with the document metadata with which the document created.</param>
        <param name="ownerEmail">Owner of the document.</param>
        <param name="delegatedUserEmail">A delegated user is specified when the authenticating user/application is acting on behalf of another user, empty if none.</param>
        <summary>
            Starts getting collection of rights available to a user for a label ID.
            </summary>
        <returns>A task that represents the asynchronous create operation. The value of the <c>TResult</c> parameter contains the list of rights.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRightsForLabelIdAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; GetRightsForLabelIdAsync (string documentId, string labelId, string ownerEmail, string delegatedUserEmail, Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; GetRightsForLabelIdAsync(string documentId, string labelId, string ownerEmail, string delegatedUserEmail, class Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.GetRightsForLabelIdAsync(System.String,System.String,System.String,System.String,Microsoft.InformationProtection.Protection.ProtectionCommonSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRightsForLabelIdAsync (documentId As String, labelId As String, ownerEmail As String, delegatedUserEmail As String, Optional settings As ProtectionCommonSettings = Nothing) As Task(Of List(Of String))" />
      <MemberSignature Language="F#" Value="abstract member GetRightsForLabelIdAsync : string * string * string * string * Microsoft.InformationProtection.Protection.ProtectionCommonSettings -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="iProtectionEngine.GetRightsForLabelIdAsync (documentId, labelId, ownerEmail, delegatedUserEmail, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.9.90.0</AssemblyVersion>
        <AssemblyVersion>1.10.98.0</AssemblyVersion>
        <AssemblyVersion>1.11.96.0</AssemblyVersion>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="System.String" Index="0" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
        <Parameter Name="labelId" Type="System.String" Index="1" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
        <Parameter Name="ownerEmail" Type="System.String" Index="2" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
        <Parameter Name="delegatedUserEmail" Type="System.String" Index="3" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
        <Parameter Name="settings" Type="Microsoft.InformationProtection.Protection.ProtectionCommonSettings" Index="4" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
      </Parameters>
      <Docs>
        <param name="documentId">Document ID associated with the document metadata.</param>
        <param name="labelId">Label ID associated with the document metadata with which the document created.</param>
        <param name="ownerEmail">Owner of the document.</param>
        <param name="delegatedUserEmail">A delegated user is specified when the authenticating user/application is acting on behalf of another user, empty if none.</param>
        <param name="settings">Common settings for protection</param>
        <summary>
            Starts getting collection of rights available to a user for a label ID.
            </summary>
        <returns>A task that represents the asynchronous create operation. The value of the <c>TResult</c> parameter contains the list of rights.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Microsoft.InformationProtection.Protection.TemplateDescriptor&gt; GetTemplates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.List`1&lt;class Microsoft.InformationProtection.Protection.TemplateDescriptor&gt; GetTemplates() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.GetTemplates" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTemplates () As List(Of TemplateDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member GetTemplates : unit -&gt; System.Collections.Generic.List&lt;Microsoft.InformationProtection.Protection.TemplateDescriptor&gt;" Usage="iProtectionEngine.GetTemplates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.6.152.0</AssemblyVersion>
        <AssemblyVersion>1.7.147.0</AssemblyVersion>
        <AssemblyVersion>1.8.102.0</AssemblyVersion>
        <AssemblyVersion>1.9.90.0</AssemblyVersion>
        <AssemblyVersion>1.10.98.0</AssemblyVersion>
        <AssemblyVersion>1.11.96.0</AssemblyVersion>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.InformationProtection.Protection.TemplateDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get collection of templates available to a user.
            </summary>
        <returns>List of template IDs.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Microsoft.InformationProtection.Protection.TemplateDescriptor&gt; GetTemplates (Microsoft.InformationProtection.Protection.GetTemplatesSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.List`1&lt;class Microsoft.InformationProtection.Protection.TemplateDescriptor&gt; GetTemplates(class Microsoft.InformationProtection.Protection.GetTemplatesSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.GetTemplates(Microsoft.InformationProtection.Protection.GetTemplatesSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTemplates (settings As GetTemplatesSettings) As List(Of TemplateDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member GetTemplates : Microsoft.InformationProtection.Protection.GetTemplatesSettings -&gt; System.Collections.Generic.List&lt;Microsoft.InformationProtection.Protection.TemplateDescriptor&gt;" Usage="iProtectionEngine.GetTemplates settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.9.90.0</AssemblyVersion>
        <AssemblyVersion>1.10.98.0</AssemblyVersion>
        <AssemblyVersion>1.11.96.0</AssemblyVersion>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.InformationProtection.Protection.TemplateDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.InformationProtection.Protection.GetTemplatesSettings" Index="0" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
      </Parameters>
      <Docs>
        <param name="settings">Settings to use when obtaining templates</param>
        <summary>
            Get collection of templates available to a user.
            </summary>
        <returns>List of template IDs.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplatesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.InformationProtection.Protection.TemplateDescriptor&gt;&gt; GetTemplatesAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.InformationProtection.Protection.TemplateDescriptor&gt;&gt; GetTemplatesAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.GetTemplatesAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTemplatesAsync () As Task(Of List(Of TemplateDescriptor))" />
      <MemberSignature Language="F#" Value="abstract member GetTemplatesAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.InformationProtection.Protection.TemplateDescriptor&gt;&gt;" Usage="iProtectionEngine.GetTemplatesAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.6.152.0</AssemblyVersion>
        <AssemblyVersion>1.7.147.0</AssemblyVersion>
        <AssemblyVersion>1.8.102.0</AssemblyVersion>
        <AssemblyVersion>1.9.90.0</AssemblyVersion>
        <AssemblyVersion>1.10.98.0</AssemblyVersion>
        <AssemblyVersion>1.11.96.0</AssemblyVersion>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.InformationProtection.Protection.TemplateDescriptor&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Starts getting collection of templates available to a user.
            </summary>
        <returns>A task that represents the asynchronous create operation. The value of the <c>TResult</c> parameter contains the list of template IDs.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplatesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.InformationProtection.Protection.TemplateDescriptor&gt;&gt; GetTemplatesAsync (Microsoft.InformationProtection.Protection.GetTemplatesSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.InformationProtection.Protection.TemplateDescriptor&gt;&gt; GetTemplatesAsync(class Microsoft.InformationProtection.Protection.GetTemplatesSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.GetTemplatesAsync(Microsoft.InformationProtection.Protection.GetTemplatesSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTemplatesAsync (settings As GetTemplatesSettings) As Task(Of List(Of TemplateDescriptor))" />
      <MemberSignature Language="F#" Value="abstract member GetTemplatesAsync : Microsoft.InformationProtection.Protection.GetTemplatesSettings -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.InformationProtection.Protection.TemplateDescriptor&gt;&gt;" Usage="iProtectionEngine.GetTemplatesAsync settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.9.90.0</AssemblyVersion>
        <AssemblyVersion>1.10.98.0</AssemblyVersion>
        <AssemblyVersion>1.11.96.0</AssemblyVersion>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.InformationProtection.Protection.TemplateDescriptor&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.InformationProtection.Protection.GetTemplatesSettings" Index="0" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
      </Parameters>
      <Docs>
        <param name="settings">Settings to use when obtaining templates</param>
        <summary>
            Starts getting collection of templates available to a user.
            </summary>
        <returns>A task that represents the asynchronous create operation. The value of the <c>TResult</c> parameter contains the list of template IDs.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantInformation">
      <MemberSignature Language="C#" Value="public Microsoft.InformationProtection.Protection.ITenantInformation GetTenantInformation (Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.InformationProtection.Protection.ITenantInformation GetTenantInformation(class Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.GetTenantInformation(Microsoft.InformationProtection.Protection.ProtectionCommonSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTenantInformation (settings As ProtectionCommonSettings) As ITenantInformation" />
      <MemberSignature Language="F#" Value="abstract member GetTenantInformation : Microsoft.InformationProtection.Protection.ProtectionCommonSettings -&gt; Microsoft.InformationProtection.Protection.ITenantInformation" Usage="iProtectionEngine.GetTenantInformation settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.InformationProtection.Protection.ITenantInformation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.InformationProtection.Protection.ProtectionCommonSettings" Index="0" FrameworkAlternate="mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14" />
      </Parameters>
      <Docs>
        <param name="settings">Common settings.</param>
        <summary>
            Loads user licensor certificate and returns information about the tenant
            </summary>
        <returns>
          <c>ITenantInformation</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantInformationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.InformationProtection.Protection.ITenantInformation&gt; GetTenantInformationAsync (Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.InformationProtection.Protection.ITenantInformation&gt; GetTenantInformationAsync(class Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.GetTenantInformationAsync(Microsoft.InformationProtection.Protection.ProtectionCommonSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTenantInformationAsync (settings As ProtectionCommonSettings) As Task(Of ITenantInformation)" />
      <MemberSignature Language="F#" Value="abstract member GetTenantInformationAsync : Microsoft.InformationProtection.Protection.ProtectionCommonSettings -&gt; System.Threading.Tasks.Task&lt;Microsoft.InformationProtection.Protection.ITenantInformation&gt;" Usage="iProtectionEngine.GetTenantInformationAsync settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.InformationProtection.Protection.ITenantInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.InformationProtection.Protection.ProtectionCommonSettings" Index="0" FrameworkAlternate="mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14" />
      </Parameters>
      <Docs>
        <param name="settings">Common settings.</param>
        <summary>
            Loads user licensor certificate and returns information about the tenant
            </summary>
        <returns>A task that represents the asynchronous create operation. The value of the <c>TResult</c> parameter contains <c>ITenantInformation</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContentForTrackingAndRevocation">
      <MemberSignature Language="C#" Value="public void RegisterContentForTrackingAndRevocation (Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo, string contentName, bool isOwnerNotificationEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContentForTrackingAndRevocation(class Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo, string contentName, bool isOwnerNotificationEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.RegisterContentForTrackingAndRevocation(Microsoft.InformationProtection.Protection.PublishingLicenseInfo,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContentForTrackingAndRevocation (licenseInfo As PublishingLicenseInfo, contentName As String, isOwnerNotificationEnabled As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member RegisterContentForTrackingAndRevocation : Microsoft.InformationProtection.Protection.PublishingLicenseInfo * string * bool -&gt; unit" Usage="iProtectionEngine.RegisterContentForTrackingAndRevocation (licenseInfo, contentName, isOwnerNotificationEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.7.147.0</AssemblyVersion>
        <AssemblyVersion>1.8.102.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="licenseInfo" Type="Microsoft.InformationProtection.Protection.PublishingLicenseInfo" Index="0" FrameworkAlternate="mipsdk-dotnet-1.7;mipsdk-dotnet-1.8" />
        <Parameter Name="contentName" Type="System.String" Index="1" FrameworkAlternate="mipsdk-dotnet-1.7;mipsdk-dotnet-1.8" />
        <Parameter Name="isOwnerNotificationEnabled" Type="System.Boolean" Index="2" FrameworkAlternate="mipsdk-dotnet-1.7;mipsdk-dotnet-1.8" />
      </Parameters>
      <Docs>
        <param name="licenseInfo">Publishing license from the protected content.</param>
        <param name="contentName">The name to associate with the content specified by the serializedPublishingLicense. If the serializedPublishingLicense specifies a content name, that value will take precedence.</param>
        <param name="isOwnerNotificationEnabled">Set to true to notify the owner via email whenever the document is decrypted, or false to not send the notification.</param>
        <summary>
            Register publishing license (PL) for document tracking and revocation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContentForTrackingAndRevocation">
      <MemberSignature Language="C#" Value="public void RegisterContentForTrackingAndRevocation (Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo, string contentName, bool isOwnerNotificationEnabled, Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContentForTrackingAndRevocation(class Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo, string contentName, bool isOwnerNotificationEnabled, class Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.RegisterContentForTrackingAndRevocation(Microsoft.InformationProtection.Protection.PublishingLicenseInfo,System.String,System.Boolean,Microsoft.InformationProtection.Protection.ProtectionCommonSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContentForTrackingAndRevocation (licenseInfo As PublishingLicenseInfo, contentName As String, isOwnerNotificationEnabled As Boolean, Optional settings As ProtectionCommonSettings = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member RegisterContentForTrackingAndRevocation : Microsoft.InformationProtection.Protection.PublishingLicenseInfo * string * bool * Microsoft.InformationProtection.Protection.ProtectionCommonSettings -&gt; unit" Usage="iProtectionEngine.RegisterContentForTrackingAndRevocation (licenseInfo, contentName, isOwnerNotificationEnabled, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.9.90.0</AssemblyVersion>
        <AssemblyVersion>1.10.98.0</AssemblyVersion>
        <AssemblyVersion>1.11.96.0</AssemblyVersion>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="licenseInfo" Type="Microsoft.InformationProtection.Protection.PublishingLicenseInfo" Index="0" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
        <Parameter Name="contentName" Type="System.String" Index="1" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
        <Parameter Name="isOwnerNotificationEnabled" Type="System.Boolean" Index="2" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
        <Parameter Name="settings" Type="Microsoft.InformationProtection.Protection.ProtectionCommonSettings" Index="3" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
      </Parameters>
      <Docs>
        <param name="licenseInfo">Publishing license from the protected content.</param>
        <param name="contentName">The name to associate with the content specified by the serializedPublishingLicense. If the serializedPublishingLicense specifies a content name, that value will take precedence.</param>
        <param name="isOwnerNotificationEnabled">Set to true to notify the owner via email whenever the document is decrypted, or false to not send the notification.</param>
        <param name="settings">Common settings for protection</param>
        <summary>
            Register publishing license (PL) for document tracking and revocation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContentForTrackingAndRevocationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RegisterContentForTrackingAndRevocationAsync (Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo, string contentName, bool isOwnerNotificationEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RegisterContentForTrackingAndRevocationAsync(class Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo, string contentName, bool isOwnerNotificationEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.RegisterContentForTrackingAndRevocationAsync(Microsoft.InformationProtection.Protection.PublishingLicenseInfo,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterContentForTrackingAndRevocationAsync (licenseInfo As PublishingLicenseInfo, contentName As String, isOwnerNotificationEnabled As Boolean) As Task" />
      <MemberSignature Language="F#" Value="abstract member RegisterContentForTrackingAndRevocationAsync : Microsoft.InformationProtection.Protection.PublishingLicenseInfo * string * bool -&gt; System.Threading.Tasks.Task" Usage="iProtectionEngine.RegisterContentForTrackingAndRevocationAsync (licenseInfo, contentName, isOwnerNotificationEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.7.147.0</AssemblyVersion>
        <AssemblyVersion>1.8.102.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="licenseInfo" Type="Microsoft.InformationProtection.Protection.PublishingLicenseInfo" Index="0" FrameworkAlternate="mipsdk-dotnet-1.7;mipsdk-dotnet-1.8" />
        <Parameter Name="contentName" Type="System.String" Index="1" FrameworkAlternate="mipsdk-dotnet-1.7;mipsdk-dotnet-1.8" />
        <Parameter Name="isOwnerNotificationEnabled" Type="System.Boolean" Index="2" FrameworkAlternate="mipsdk-dotnet-1.7;mipsdk-dotnet-1.8" />
      </Parameters>
      <Docs>
        <param name="licenseInfo">Publishing license from the protected content.</param>
        <param name="contentName">The name to associate with the content specified by the serializedPublishingLicense. If the serializedPublishingLicense specifies a content name, that value will take precedence.</param>
        <param name="isOwnerNotificationEnabled">Set to true to notify the owner via email whenever the document is decrypted, or false to not send the notification.</param>
        <summary>
            Register publishing license (PL) for document tracking and revocation.
            </summary>
        <returns>A task that represents the asynchronous create operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContentForTrackingAndRevocationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RegisterContentForTrackingAndRevocationAsync (Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo, string contentName, bool isOwnerNotificationEnabled, Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RegisterContentForTrackingAndRevocationAsync(class Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo, string contentName, bool isOwnerNotificationEnabled, class Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.RegisterContentForTrackingAndRevocationAsync(Microsoft.InformationProtection.Protection.PublishingLicenseInfo,System.String,System.Boolean,Microsoft.InformationProtection.Protection.ProtectionCommonSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterContentForTrackingAndRevocationAsync (licenseInfo As PublishingLicenseInfo, contentName As String, isOwnerNotificationEnabled As Boolean, Optional settings As ProtectionCommonSettings = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member RegisterContentForTrackingAndRevocationAsync : Microsoft.InformationProtection.Protection.PublishingLicenseInfo * string * bool * Microsoft.InformationProtection.Protection.ProtectionCommonSettings -&gt; System.Threading.Tasks.Task" Usage="iProtectionEngine.RegisterContentForTrackingAndRevocationAsync (licenseInfo, contentName, isOwnerNotificationEnabled, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.9.90.0</AssemblyVersion>
        <AssemblyVersion>1.10.98.0</AssemblyVersion>
        <AssemblyVersion>1.11.96.0</AssemblyVersion>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="licenseInfo" Type="Microsoft.InformationProtection.Protection.PublishingLicenseInfo" Index="0" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
        <Parameter Name="contentName" Type="System.String" Index="1" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
        <Parameter Name="isOwnerNotificationEnabled" Type="System.Boolean" Index="2" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
        <Parameter Name="settings" Type="Microsoft.InformationProtection.Protection.ProtectionCommonSettings" Index="3" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
      </Parameters>
      <Docs>
        <param name="licenseInfo">Publishing license from the protected content.</param>
        <param name="contentName">The name to associate with the content specified by the serializedPublishingLicense. If the serializedPublishingLicense specifies a content name, that value will take precedence.</param>
        <param name="isOwnerNotificationEnabled">Set to true to notify the owner via email whenever the document is decrypted, or false to not send the notification.</param>
        <param name="settings">Common settings for protection</param>
        <summary>
            Register publishing license (PL) for document tracking and revocation.
            </summary>
        <returns>A task that represents the asynchronous create operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeContent">
      <MemberSignature Language="C#" Value="public void RevokeContent (Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeContent(class Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.RevokeContent(Microsoft.InformationProtection.Protection.PublishingLicenseInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevokeContent (licenseInfo As PublishingLicenseInfo)" />
      <MemberSignature Language="F#" Value="abstract member RevokeContent : Microsoft.InformationProtection.Protection.PublishingLicenseInfo -&gt; unit" Usage="iProtectionEngine.RevokeContent licenseInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.7.147.0</AssemblyVersion>
        <AssemblyVersion>1.8.102.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="licenseInfo" Type="Microsoft.InformationProtection.Protection.PublishingLicenseInfo" Index="0" FrameworkAlternate="mipsdk-dotnet-1.7;mipsdk-dotnet-1.8" />
      </Parameters>
      <Docs>
        <param name="licenseInfo">Publishing license from the protected content.</param>
        <summary>
            Perform revocation for content.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeContent">
      <MemberSignature Language="C#" Value="public void RevokeContent (Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo, Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeContent(class Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo, class Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.RevokeContent(Microsoft.InformationProtection.Protection.PublishingLicenseInfo,Microsoft.InformationProtection.Protection.ProtectionCommonSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevokeContent (licenseInfo As PublishingLicenseInfo, Optional settings As ProtectionCommonSettings = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member RevokeContent : Microsoft.InformationProtection.Protection.PublishingLicenseInfo * Microsoft.InformationProtection.Protection.ProtectionCommonSettings -&gt; unit" Usage="iProtectionEngine.RevokeContent (licenseInfo, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.9.90.0</AssemblyVersion>
        <AssemblyVersion>1.10.98.0</AssemblyVersion>
        <AssemblyVersion>1.11.96.0</AssemblyVersion>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="licenseInfo" Type="Microsoft.InformationProtection.Protection.PublishingLicenseInfo" Index="0" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
        <Parameter Name="settings" Type="Microsoft.InformationProtection.Protection.ProtectionCommonSettings" Index="1" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
      </Parameters>
      <Docs>
        <param name="licenseInfo">Publishing license from the protected content.</param>
        <param name="settings">Common settings for protection</param>
        <summary>
            Perform revocation for content.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeContentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RevokeContentAsync (Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RevokeContentAsync(class Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.RevokeContentAsync(Microsoft.InformationProtection.Protection.PublishingLicenseInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function RevokeContentAsync (licenseInfo As PublishingLicenseInfo) As Task" />
      <MemberSignature Language="F#" Value="abstract member RevokeContentAsync : Microsoft.InformationProtection.Protection.PublishingLicenseInfo -&gt; System.Threading.Tasks.Task" Usage="iProtectionEngine.RevokeContentAsync licenseInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.7.147.0</AssemblyVersion>
        <AssemblyVersion>1.8.102.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="licenseInfo" Type="Microsoft.InformationProtection.Protection.PublishingLicenseInfo" Index="0" FrameworkAlternate="mipsdk-dotnet-1.7;mipsdk-dotnet-1.8" />
      </Parameters>
      <Docs>
        <param name="licenseInfo">Publishing license from the protected content.</param>
        <summary>
            Perform revocation for content.
            </summary>
        <returns>A task that represents the asynchronous create operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeContentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RevokeContentAsync (Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo, Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RevokeContentAsync(class Microsoft.InformationProtection.Protection.PublishingLicenseInfo licenseInfo, class Microsoft.InformationProtection.Protection.ProtectionCommonSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.InformationProtection.Protection.IProtectionEngine.RevokeContentAsync(Microsoft.InformationProtection.Protection.PublishingLicenseInfo,Microsoft.InformationProtection.Protection.ProtectionCommonSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function RevokeContentAsync (licenseInfo As PublishingLicenseInfo, Optional settings As ProtectionCommonSettings = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member RevokeContentAsync : Microsoft.InformationProtection.Protection.PublishingLicenseInfo * Microsoft.InformationProtection.Protection.ProtectionCommonSettings -&gt; System.Threading.Tasks.Task" Usage="iProtectionEngine.RevokeContentAsync (licenseInfo, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.9.90.0</AssemblyVersion>
        <AssemblyVersion>1.10.98.0</AssemblyVersion>
        <AssemblyVersion>1.11.96.0</AssemblyVersion>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="licenseInfo" Type="Microsoft.InformationProtection.Protection.PublishingLicenseInfo" Index="0" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
        <Parameter Name="settings" Type="Microsoft.InformationProtection.Protection.ProtectionCommonSettings" Index="1" FrameworkAlternate="mipsdk-dotnet-1.10;mipsdk-dotnet-1.11;mipsdk-dotnet-1.12;mipsdk-dotnet-1.13;mipsdk-dotnet-1.14;mipsdk-dotnet-1.9" />
      </Parameters>
      <Docs>
        <param name="licenseInfo">Publishing license from the protected content.</param>
        <param name="settings">Common settings for protection</param>
        <summary>
            Perform revocation for content.
            </summary>
        <returns>A task that represents the asynchronous create operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public Microsoft.InformationProtection.Protection.ProtectionEngineSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.InformationProtection.Protection.ProtectionEngineSettings Settings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.InformationProtection.Protection.IProtectionEngine.Settings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Settings As ProtectionEngineSettings" />
      <MemberSignature Language="F#" Value="member this.Settings : Microsoft.InformationProtection.Protection.ProtectionEngineSettings" Usage="Microsoft.InformationProtection.Protection.IProtectionEngine.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.InformationProtection</AssemblyName>
        <AssemblyVersion>1.6.152.0</AssemblyVersion>
        <AssemblyVersion>1.7.147.0</AssemblyVersion>
        <AssemblyVersion>1.8.102.0</AssemblyVersion>
        <AssemblyVersion>1.9.90.0</AssemblyVersion>
        <AssemblyVersion>1.10.98.0</AssemblyVersion>
        <AssemblyVersion>1.11.96.0</AssemblyVersion>
        <AssemblyVersion>1.12.101.0</AssemblyVersion>
        <AssemblyVersion>1.15.104.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.InformationProtection.Protection.ProtectionEngineSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the engine settings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
